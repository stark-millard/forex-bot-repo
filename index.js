import {
	verifyKeyboard,
	profileKeyboard,
	deleteKeyboard,
	investKeyboard,
	cryptoKeyboard,
	tradeKeyboard,
	tradeTimeKeyboard,
	walletKeyboard,
	stockKeyboard,
	doubleDeleteKeyboard,
	dealKeyboard,
	successWithdrawKeyboard
} from './keyboards.mjs'
import mongo from './db.mjs'
import TelegramBot from 'node-telegram-bot-api'
import fs from 'fs'
import express from 'express'
import dotenv from 'dotenv'

dotenv.config()

const app = express()
const port = process.env.PORT || 3000

const bot = new TelegramBot(process.env.BOT_TOKEN, { polling: true })
const users = mongo.db('ForexTelegramDB').collection('Users')
let isTradeComplete = true

const setTradeTime = async (time, chatId, query) => {
	if (!isTradeComplete) return
	isTradeComplete = false
	try {
		const dataFromDB = JSON.parse(
			JSON.stringify(await getUser(query.message.chat))
		)
		const userData = await getUser(query.message.chat)
		const min = time / 60
		const max = time / 20
		const income = Math.floor(Math.random() * (max - min) + min)

		let updatedWallet
		if (time === 10000) {
			updatedWallet = dataFromDB.data.wallet - income
		} else {
			updatedWallet = dataFromDB.data.wallet + income
		}

		await updateUser(chatId, {
			...userData.data,
			wallet: updatedWallet,
			deals: dataFromDB.data.deals + 1
		})

		setTimeout(() => {
			bot.deleteMessage(chatId, query.message.message_id - 2)
			bot.deleteMessage(chatId, query.message.message_id - 1)
			bot.deleteMessage(chatId, query.message.message_id)
			bot.sendMessage(
				chatId,
				`
	–°–¥–µ–ª–∫–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞‚úÖ\n
	–ü—Ä–∏–±—ã–ª—å ${time === 10000 ? `-${income}` : income}
								`,
				{
					reply_markup: dealKeyboard
				}
			)
		}, time)
	} catch (error) {
		console.log(error)
	}
}

const updateUser = async (userId, data) => {
	try {
		await users.updateOne(
			{ id: userId },
			{ $set: { data } },
			{ upsert: true }
		)
	} catch (error) {
		console.log(error)
	}
}

const getUser = async (data) => {
	try {
		const user = await users.findOne({ id: data.id })
		return user
	} catch (error) {
		console.log(error)
	}
}

const chekForWithdraw = (dataFromDBwallet) => {
	bot.addListener('message', async (msg) => {
		const text = msg.text
		const chatId = msg.chat.id
		const minWithdraw = 500
		const userData = await getUser(msg.chat)

		if (!dataFromDBwallet)
			return bot.sendMessage(chatId, '–ù–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ—Ç –¥–µ–Ω–µ–≥', {
				reply_markup: doubleDeleteKeyboard
			})

		if (parseInt(text) > dataFromDBwallet)
			return bot.sendMessage(chatId, '–ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', {
				reply_markup: doubleDeleteKeyboard
			})

		if (parseInt(text) < minWithdraw)
			return bot.sendMessage(
				chatId,
				'–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ - 500 UAH',
				{
					reply_markup: doubleDeleteKeyboard
				}
			)

		await updateUser(chatId, {
			...userData.data,
			wallet: dataFromDBwallet - text
		})

		bot.sendMessage(
			chatId,
			'‚úÖ–ü–µ—Ä–µ–≤–æ–¥ –ø—Ä–æ–∏–∑–≤–µ–¥—ë–Ω –Ω–∞ –∫–∞—Ä—Ç—É, —Å –∫–æ—Ç–æ—Ä–æ–π –ø–æ—Å—Ç—É–ø–∏–ª–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ!',
			{
				reply_markup: successWithdrawKeyboard
			}
		)
		return bot.removeAllListeners('message')
	})
}

const chekForTrade = (dataFromDBwallet) => {
	bot.addListener('message', async (msg) => {
		const text = msg.text
		const chatId = msg.chat.id
		const minBet = 500

		if (dataFromDBwallet === 0 && dataFromDBwallet <= minBet)
			return bot.sendMessage(chatId, '–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å', {
				reply_markup: doubleDeleteKeyboard
			})

		if (parseInt(text) < minBet)
			return bot.sendMessage(chatId, '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: 500 UAH', {
				reply_markup: doubleDeleteKeyboard
			})

		if (parseInt(text) > dataFromDBwallet)
			return bot.sendMessage(chatId, '–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å', {
				reply_markup: doubleDeleteKeyboard
			})

		bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è —Å—Ç–∞–≤–∫–∏', {
			reply_markup: tradeTimeKeyboard
		})
		return bot.removeAllListeners('message')
	})
}

const start = () => {
	bot.setMyCommands([
		{ command: '/start', description: '–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –±–æ—Ç–æ–º' },
		{ command: '/profile', description: '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å' }
	])
	bot.on('message', async (msg) => {
		const text = msg.text
		const chatId = msg.chat.id
		//* –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏

		if (text === '/start') {
			await updateUser(chatId, {
				...msg.chat,
				wallet: 0,
				verif: false,
				deals: 0
			})

			return bot.sendMessage(
				chatId,
				`
		üéâ–ü—Ä–∏–≤–µ—Ç, ${msg.chat.first_name}!\n
		–ü–æ–ª–∏—Ç–∏–∫–∞ –∏ —É—Å–ª–æ–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã–º –±–æ—Ç–æ–º:
		1. –ü–µ—Ä–µ–¥ –ø—Ä–∏–Ω—è—Ç–∏–µ–º –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –ò–Ω–≤–µ—Å—Ç–æ—Ä—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –æ—Ü–µ–Ω–∏—Ç—å —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Ä–∏—Å–∫–∏ –∏ –≤—ã–≥–æ–¥—ã, 
		–Ω–∞–ª–æ–≥–æ–≤—ã–µ, —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ, –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –∑–∞–∫–ª—é—á–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏, —Å–≤–æ—é –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–Ω—è—Ç—å —Ç–∞–∫–∏–µ —Ä–∏—Å–∫–∏.
		–ö–ª–∏–µ–Ω—Ç —Ç–∞–∫–∂–µ –Ω–µ—Å–µ—Ç —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ –æ–ø–ª–∞—Ç—É –±—Ä–æ–∫–µ—Ä—Å–∫–∏—Ö –∏ –¥–µ–ø–æ–∑–∏—Ç–∞—Ä–Ω—ã—Ö —É—Å–ª—É–≥.
		2. –í —Å–ª—É—á–∞–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ
		–∑–∞–ø—Ä–æ—Å–∏—Ç—å —É –≤–∞—Å –¥–æ–∫—É–º–µ–Ω—Ç—ã, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ –≤–∞—à—É –ª–∏—á–Ω–æ—Å—Ç—å –∏ –≤–∞—à–µ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏–µ.
		–ö–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∫—Ä—É–ø–Ω–æ–π —Å—É–º–º—ã —Å—Ä–µ–¥—Å—Ç–≤.
		3. –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø—Ä–∏ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–∏ –Ω–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ/–æ–±–º–∞–Ω –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã!
		4. –ú—É–ª—å—Ç–∏–∞–∫–∫–∞—É–Ω—Ç—ã –∑–∞–ø—Ä–µ—â–µ–Ω—ã!
		5. –ï—Å–ª–∏ –±—É–¥—É—Ç –≤—ã—è–≤–ª–µ–Ω—ã –≤—ã—à–µ–ø–µ—Ä—á–∏—Å–ª–µ–Ω–Ω—ã–µ —Å–ª—É—á–∞–∏, –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—É–¥–µ—Ç –∑–∞–º–æ—Ä–æ–∂–µ–Ω –¥–æ –≤—ã—è—Å–Ω–µ–Ω–∏—è –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤!
		–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ`,
				{
					reply_markup: verifyKeyboard
				}
			)
		}
	})

	bot.on('callback_query', async (query) => {
		const chatId = query.message.chat.id

		if (query.data === 'acceptVerify') {
			const dataFromDB = JSON.parse(
				JSON.stringify(await getUser(query.message.chat))
			)

			const deals = dataFromDB.data.deals
			const isVerify = dataFromDB.data.verif
			const stream = fs.createReadStream(
				'./assets/photo_2021-08-31_17-55-13.jpg'
			)

			bot.deleteMessage(chatId, query.message.message_id - 1)
			bot.deleteMessage(chatId, query.message.message_id)

			return bot.sendPhoto(chatId, stream, {
				caption: `
		üë§–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n
		üó£–ò–º—è: ${query.message.chat.first_name}
		üë®‚Äçüíª–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: ${isVerify === false ? '‚ùå' : '‚úÖ'}
		ü§ù–°–¥–µ–ª–æ–∫: ${deals}
		üìà–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ: ${Math.floor(1300 + query.message.message_id)}`,
				reply_markup: profileKeyboard
			})
		}

		if (query.data === 'refresh') {
			const dataFromDB = JSON.parse(
				JSON.stringify(await getUser(query.message.chat))
			)

			const deals = dataFromDB.data.deals
			const isVerify = dataFromDB.data.verif
			const stream = fs.createReadStream(
				'./assets/photo_2021-08-31_17-55-13.jpg'
			)

			bot.deleteMessage(chatId, query.message.message_id)

			return bot.sendPhoto(chatId, stream, {
				caption: `
		üë§–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n
		üó£–ò–º—è: ${query.message.chat.first_name}
		üë®‚Äçüíª–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: ${isVerify === false ? '‚ùå' : '‚úÖ'}
		ü§ù–°–¥–µ–ª–æ–∫: ${deals}
		üìà–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ: ${Math.floor(1300 + query.message.message_id)}`,
				reply_markup: profileKeyboard
			})
		}

		if (query.data === 'wallet') {
			return bot.sendMessage(
				chatId,
				`
		üíº–í–∞—à –∫–æ—à–µ–ª–µ–∫\n
		üÜî–í–∞—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π ID: ${chatId}
		üí±–í–∞–ª—é—Ç–∞: UAH
		üè¶–ë–∞–ª–∞–Ω—Å: ${
			JSON.parse(JSON.stringify(await getUser(query.message.chat))).data
				.wallet
		} UAH`,
				{
					reply_markup: walletKeyboard
				}
			)
		}

		if (query.data === 'donate') {
			const stream = fs.createReadStream('./assets/donate.jpg')
			return bot.sendPhoto(chatId, stream, {
				caption: `
		ü§µ –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞\n
		‚ùóÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è - 500 UAH\n
		üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã : 5375411413556163
		üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π : FRX-INV:${query.message.chat.id}\n
		‚ö†Ô∏è–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π!\n
		‚ö†Ô∏è–ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 5-10 –º–∏–Ω—É—Ç\n
		‚ö†Ô∏è–ï—Å–ª–∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏—à–ª–∏—Ç–µ —á–µ–∫/—Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ –∂–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n
		üõ† –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞ - @ForexSupportUA`,
				reply_markup: deleteKeyboard
			})
		}

		if (query.data === 'withdraw') {
			const dataFromDBwallet = JSON.parse(
				JSON.stringify(await getUser(query.message.chat))
			).data.wallet
			await bot.sendMessage(
				chatId,
				`
		ü§µ –î–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤
		–£–ö–ê–ñ–ò–¢–ï –°–£–ú–ú–£ –í –°–õ–ï–î–£–Æ–©–ï–ú –°–û–û–ë–©–ï–ù–ò–ò:\n
		üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π : FRX-INV:${query.message.chat.id}\n
		‚ö†Ô∏è–í—ã–ø–ª–∞—Ç–∞ –ø—Ä–∏–¥—ë—Ç –Ω–∞ –∫–∞—Ä—Ç—É, —Å –∫–æ—Ç–æ—Ä–æ–π –±—ã–ª–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞!\n
		‚ö†Ô∏è–ü–µ—Ä–µ–≤–æ–¥ –±—É–¥–µ—Ç —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º, –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑–∞–Ω –≤—ã—à–µ!\n
		‚ö†Ô∏è–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ - 500 UAH!\n
		‚ö†Ô∏è–î–µ–Ω—å–≥–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 5-15 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –≤—ã–≤–æ–¥–∞, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É!\n
		‚ö†Ô∏è üõ† –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞ - @ForexSupportUA`,
				{
					reply_markup: deleteKeyboard
				}
			)
			chekForWithdraw(dataFromDBwallet)
			return
		}

		if (query.data === 'information') {
			return bot.sendMessage(
				chatId,
				`
		‚ùì–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –Ω–∏—Ö\n
		1. –ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ?
		–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –∫—Ä–∞—Ç–∫–∏–µ —Å—Ä–æ–∫–∏ –Ω–∞ —Ñ–æ–Ω–µ –ø–∞–¥–µ–Ω–∏—è –∏–ª–∏ —Ä–æ—Å—Ç–∞ –∞–∫—Ç–∏–≤–æ–≤.\n
		2. –ö–∞–∫ –ø—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é?
		–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –≤–∏–¥–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è –ª–∏—á–Ω–æ—Å—Ç–∏ –≤ –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–µ - @ForexSupportUA.`,
				{
					reply_markup: deleteKeyboard
				}
			)
		}

		if (query.data === 'invest') {
			return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–±–ª–∞—Å—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è', {
				reply_markup: investKeyboard
			})
		}

		if (query.data === 'investStock') {
			return bot.sendMessage(
				chatId,
				'–í—ã–±–µ—Ä–∏—Ç–µ –∞–∫—Ü–∏—é –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
				{
					reply_markup: stockKeyboard
				}
			)
		}

		if (query.data === 'investAmazon') {
			return bot.sendMessage(
				chatId,
				`
		–ö–æ–º–ø–∞–Ω–∏—è: Amazon\n
		–ö—É—Ä—Å –∞–∫—Ü–∏–∏: 2 475 $
		–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–≤–∏–∂–µ–Ω–∏–µ: ${Math.round(Math.random()) ? '–ø–æ–Ω–∏–∂–µ–Ω–∏–µ' : '–ø–æ–≤—ã—à–µ–Ω–∏–µ'}
						`,
				{
					reply_markup: tradeKeyboard
				}
			)
		}
		if (query.data === 'investTesla') {
			return bot.sendMessage(
				chatId,
				`
		–ö–æ–º–ø–∞–Ω–∏—è: Tesla\n
		–ö—É—Ä—Å –∞–∫—Ü–∏–∏: 765 $
		–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–≤–∏–∂–µ–Ω–∏–µ: ${Math.round(Math.random()) ? '–ø–æ–Ω–∏–∂–µ–Ω–∏–µ' : '–ø–æ–≤—ã—à–µ–Ω–∏–µ'}
						`,
				{
					reply_markup: tradeKeyboard
				}
			)
		}
		if (query.data === 'investApple') {
			return bot.sendMessage(
				chatId,
				`
		–ö–æ–º–ø–∞–Ω–∏—è: Apple\n
		–ö—É—Ä—Å –∞–∫—Ü–∏–∏: 150 $
		–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–≤–∏–∂–µ–Ω–∏–µ: ${Math.round(Math.random()) ? '–ø–æ–Ω–∏–∂–µ–Ω–∏–µ' : '–ø–æ–≤—ã—à–µ–Ω–∏–µ'}
						`,
				{
					reply_markup: tradeKeyboard
				}
			)
		}
		if (query.data === 'investGoogle') {
			return bot.sendMessage(
				chatId,
				`
		–ö–æ–º–ø–∞–Ω–∏—è: Google\n
		–ö—É—Ä—Å –∞–∫—Ü–∏–∏: 2 322 $
		–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–≤–∏–∂–µ–Ω–∏–µ: ${Math.round(Math.random()) ? '–ø–æ–Ω–∏–∂–µ–Ω–∏–µ' : '–ø–æ–≤—ã—à–µ–Ω–∏–µ'}
						`,
				{
					reply_markup: tradeKeyboard
				}
			)
		}

		if (query.data === 'investCrypto') {
			return bot.sendMessage(
				chatId,
				'–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
				{
					reply_markup: cryptoKeyboard
				}
			)
		}

		if (query.data === 'investBitcoin') {
			return bot.sendMessage(
				chatId,
				`
		–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞: Bitcoin\n
		–ö—É—Ä—Å –≤–∞–ª—é—Ç—ã: 29 362 $
		–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–≤–∏–∂–µ–Ω–∏–µ: ${Math.round(Math.random()) ? '–ø–æ–Ω–∏–∂–µ–Ω–∏–µ' : '–ø–æ–≤—ã—à–µ–Ω–∏–µ'}
						`,
				{
					reply_markup: tradeKeyboard
				}
			)
		}
		if (query.data === 'investEthereum') {
			return bot.sendMessage(
				chatId,
				`
		–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞: Ethereum\n
		–ö—É—Ä—Å –≤–∞–ª—é—Ç—ã: 1 957 $
		–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–≤–∏–∂–µ–Ω–∏–µ: ${Math.round(Math.random()) ? '–ø–æ–Ω–∏–∂–µ–Ω–∏–µ' : '–ø–æ–≤—ã—à–µ–Ω–∏–µ'}
						`,
				{
					reply_markup: tradeKeyboard
				}
			)
		}
		if (query.data === 'investBNB') {
			return bot.sendMessage(
				chatId,
				`
		–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞: Binance coin\n
		–ö—É—Ä—Å –≤–∞–ª—é—Ç—ã: 318 $
		–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–≤–∏–∂–µ–Ω–∏–µ: ${Math.round(Math.random()) ? '–ø–æ–Ω–∏–∂–µ–Ω–∏–µ' : '–ø–æ–≤—ã—à–µ–Ω–∏–µ'}
						`,
				{
					reply_markup: tradeKeyboard
				}
			)
		}
		if (query.data === 'investSolana') {
			return bot.sendMessage(
				chatId,
				`
		–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞: Solana\n
		–ö—É—Ä—Å –≤–∞–ª—é—Ç—ã: 44 $
		–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–≤–∏–∂–µ–Ω–∏–µ: ${Math.round(Math.random()) ? '–ø–æ–Ω–∏–∂–µ–Ω–∏–µ' : '–ø–æ–≤—ã—à–µ–Ω–∏–µ'}
						`,
				{
					reply_markup: tradeKeyboard
				}
			)
		}

		if (query.data === 'trade') {
			const dataFromDBwallet = JSON.parse(
				JSON.stringify(await getUser(query.message.chat))
			).data.wallet

			await bot.sendMessage(
				chatId,
				`
		–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ –≤ —á–∞—Ç:\n
		–í–∞—à –±–∞–ª–∞–Ω—Å: ${dataFromDBwallet} UAH
		–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: 500 UAH
					`,
				{
					reply_markup: deleteKeyboard
				}
			)
			chekForTrade(dataFromDBwallet)
			return
		}

		if (query.data === '10sec') {
			setTradeTime(10000, chatId, query)
			return
		}

		if (query.data === '30sec') {
			setTradeTime(30000, chatId, query)
			return
		}

		if (query.data === '60sec') {
			setTradeTime(60000, chatId, query)
			return
		}

		if (query.data === 'investFaq') {
			return bot.sendMessage(
				chatId,
				`
		–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?\n
		–ú—ã —è–≤–ª—è–µ–º—Å—è –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–º –º–µ–∂–¥—É –≤–∞–º–∏ –∏ –±–∏—Ä–∂–µ–π.
		–ó–∞ —Å–≤–æ–∏ —É—Å–ª—É–≥–∏ –º—ã –≤–∑—ã–º–∞–µ–º 2.5% –ø—Ä–∏–±—ã–ª–∏.
		–í—Å–µ —Ä–∏—Å–∫–∏ –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –Ω–∞ —Å–µ–±—è.
		–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏–∑—É—á–∏—Ç—å –∫—É—Ä—Å—ã –ø–µ—Ä–µ–¥ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º–∏, –∏–ª–∏ –∏–º–µ—Ç—å –æ–ø—ã—Ç–Ω–æ–≥–æ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞.
		–ò–Ω–µ—Å—Ç–∏—Ü–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –≤ –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–æ–º —Ä–µ–∂–∏–º–µ.
		–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è —Å—Ç–∞–≤–∫–∏, –¥–æ–∂–¥–∏—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.`,
				{
					reply_markup: deleteKeyboard
				}
			)
		}

		if (query.data === 'delete') {
			return bot.deleteMessage(chatId, query.message.message_id)
		}

		if (query.data === 'doubleDelete') {
			bot.deleteMessage(chatId, query.message.message_id - 1)
			return bot.deleteMessage(chatId, query.message.message_id)
		}

		bot.answerCallbackQuery({ callback_query_id: query.id })
	})
}

start()

app.listen(port, () => {
	console.log(`App listening on port ${port}`)
})
